name: Build and Publish Docker Images

on:
  schedule:
    - cron: '0 3 * * *'
  release:
    types: [published]

  push:
    branches:
      - main
    # Only build the image when a file in the image is updated
    # These paths are files in the git repository from
    # .dockerignore (except the Docker files)
    paths-ignore:
      - ".devcontainer/**"
      - ".editorconfig"
      - ".github/**"
      - ".last_release"
      - "!.github/workflows/docker.yml" # Still run on changes to this file
      - ".gitignore"
      - ".pre-commit-config.yaml"
      - "**.md"
      - "config.example.json"
      - "LICENSE"
      - "pyproject.toml"
      - "setup.cfg"
      - "tests/**"

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # A new tagged release is published, which builds :tag and :latest
      - name: Build and push :tag
        if: github.event_name == 'release'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/spoofdpi:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/spoofdpi:latest
          platforms: linux/amd64
          # Don't use the cache for release images to ensure everything is up to date

      # main branch push, which builds :main
      - name: Build and push :main
        if: github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/spoofdpi:main
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

          # Cron job: Build and push images every 5 minutes
      - name: Build and push from cron
        if: github.event_name == 'schedule'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/spoofdpi:main
          platforms: linux/amd64
